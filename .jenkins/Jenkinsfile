#!groovy

def buildbadge = addEmbeddableBadgeConfiguration(id: "allbuilds", subject: "CUDA/Kokkos ctest", status: "skipped")

pipeline {
    agent { label 'pcsgs05' }
    options {
        buildDiscarder(
            logRotator(
                daysToKeepStr: "28",
                numToKeepStr: "100",
                artifactDaysToKeepStr: "28",
                artifactNumToKeepStr: "100"
            )
        )
        disableConcurrentBuilds()
    }
    environment {
        GITHUB_TOKEN = credentials('GITHUB_TOKEN_OCTOTIGER')
        MAINTAINER_MAIL = credentials('CPPUDDLE_MAINTAINER_EMAIL')
    }
    stages {
        stage('checkout') {
            steps {
              script {
                  buildbadge.setStatus('running')
              }
              dir('CPPuddle') {
                  checkout scm
                  sh '''
                      git submodule update --init --recursive
                      ./scripts/clean_dependencies.sh
                      rm -rf build
                  '''
              }
            }
        }
        stage('build-and-test') {
            matrix {
                axes {
                    axis {
                        name 'build_type'
                        values 'Release', 'Debug'
                    }
                    axis {
                        name 'compiler'
                        values 'gcc', 'clang'
                    }
                }
                stages {
                    stage('init') {
                        steps {
                            dir('CPPuddle') {
                                sh '''
                                    github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                                    curl --verbose\
                                        --request POST \
                                        --url "https://api.github.com/repos/SC-SGS/CPPuddle/statuses/$GIT_COMMIT" \
                                        --header "Content-Type: application/json" \
                                        --header "authorization: Bearer ${github_token}" \
                                        --data "{
                                            \\"state\\": \\"pending\\",
                                            \\"context\\": \\"jenkins-${compiler}-${build_type}-ctest\\",
                                            \\"description\\": \\"Jenkins CI Job: jenkins-${compiler}-${build_type}-ctest\\",
                                            \\"target_url\\": \\"https://simsgs.informatik.uni-stuttgart.de/jenkins/job/CPPuddle/job/${JOB_BASE_NAME}/${BUILD_NUMBER}/console\\"
                                    }"
                                '''
                            }
                        }
                    }
                    stage('build-submodules') {
                        steps {
                            dir('CPPuddle') {
                                sh '''
                                    . /usr/local.nfs/Modules/latest/init/sh
                                    module load cuda
                                    ./scripts/build_dependencies.sh ${build_type} ${compiler}
                                '''
                            }
                        }
                    }
                    stage('build cppuddle') {
                        steps {
                            dir('CPPuddle') {
                                sh '''
                                    . /usr/local.nfs/Modules/latest/init/sh
                                    module load cuda 
                                    ./scripts/configure_build_directory.sh ${build_type} ${compiler}
                                    cd build/${compiler}-${build_type}
                                    make -j4
                                '''
                            }
                        }
                    }
                    stage('run tests') {
                        steps {
                            dir('CPPuddle') {
                                sh '''
                                    . /usr/local.nfs/Modules/latest/init/sh
                                    module load cuda
                                    cd build/${compiler}-${build_type}
                                    ctest -j4
                                '''
                            }
                        }
                    }
                }
                post {
                    success {
                        sh '''
                            github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                            curl --verbose\
                                --request POST \
                                --url "https://api.github.com/repos/SC-SGS/CPPuddle/statuses/$GIT_COMMIT" \
                                --header "Content-Type: application/json" \
                                --header "authorization: Bearer ${github_token}" \
                                --data "{
                                    \\"state\\": \\"success\\",
                                    \\"context\\": \\"jenkins-${compiler}-${build_type}-ctest\\",
                                    \\"description\\": \\"Jenkins CI Job: jenkins-${compiler}-${build_type}-ctest\\",
                                    \\"target_url\\": \\"https://simsgs.informatik.uni-stuttgart.de/jenkins/job/CPPuddle/job/${JOB_BASE_NAME}/${BUILD_NUMBER}/console\\"
                            }"
                        '''
                    }
                    failure {
                        sh '''
                            github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                            curl --verbose\
                                --request POST \
                                --url "https://api.github.com/repos/SC-SGS/CPPuddle/statuses/$GIT_COMMIT" \
                                --header "Content-Type: application/json" \
                                --header "authorization: Bearer ${github_token}" \
                                --data "{
                                    \\"state\\": \\"failure\\",
                                    \\"context\\": \\"jenkins-${compiler}-${build_type}-ctest\\",
                                    \\"description\\": \\"Jenkins CI Job: jenkins-${compiler}-${build_type}-ctest\\",
                                    \\"target_url\\": \\"https://simsgs.informatik.uni-stuttgart.de/jenkins/job/CPPuddle/job/${JOB_BASE_NAME}/${BUILD_NUMBER}/console\\"
                            }"
                        '''
                    }
                    aborted {
                        sh '''
                            github_token=$(echo ${GITHUB_TOKEN} | cut -f2 -d':')
                            curl --verbose\
                                --request POST \
                                --url "https://api.github.com/repos/SC-SGS/CPPuddle/statuses/$GIT_COMMIT" \
                                --header "Content-Type: application/json" \
                                --header "authorization: Bearer ${github_token}" \
                                --data "{
                                    \\"state\\": \\"error\\",
                                    \\"context\\": \\"jenkins-${compiler}-${build_type}-ctest\\",
                                    \\"description\\": \\"Jenkins CI Job: jenkins-${compiler}-${build_type}-ctest\\",
                                    \\"target_url\\": \\"https://simsgs.informatik.uni-stuttgart.de/jenkins/job/CPPuddle/job/${JOB_BASE_NAME}/${BUILD_NUMBER}/console\\"
                            }"
                        '''
                    }
                }
            }
        }
    }
    post {
        success {
	    script {
	        buildbadge.setStatus('success')
            sh '''
                echo "Build succeded! Pipeline ${JOB_BASE_NAME} with build ID ${BUILD_NUMBER} using GIT commit ${GIT_COMMIT}" | mail -s "Jenkins CPPuddle: Build ${JOB_BASE_NAME}/${BUILD_NUMBER} succeded" "${MAINTAINER_MAIL}"
            '''
	    }
        }
        failure {
	    script {
	        buildbadge.setStatus('failing')
	    }
            sh '''
                echo "Build failed! Pipeline ${JOB_BASE_NAME} with build ID ${BUILD_NUMBER} using GIT commit ${GIT_COMMIT}" | mail -s "Jenkins CPPuddle: Build ${JOB_BASE_NAME}/${BUILD_NUMBER} failed" "${MAINTAINER_MAIL}"
            '''
        }
        aborted {
	    script {
	        buildbadge.setStatus('aborted')
	    }
            sh '''
                echo "Build aborted on pipeline ${JOB_BASE_NAME} with build ID ${BUILD_NUMBER} using GIT commit ${GIT_COMMIT}" | mail -s "Jenkins CPPuddle: Build ${JOB_BASE_NAME}/${BUILD_NUMBER} aborted" "${MAINTAINER_MAIL}"
            '''
        }
    }
}
